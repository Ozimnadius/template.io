//@prepros-append pages/common.js
//@prepros-append pages/index.js
// common.js
function getNumber(str) {
    return parseInt(str.replace(/\s/g, ''));
}

function number_format(number, decimals, dec_point, thousands_sep) {
    var i, j, kw, kd, km;
    if (isNaN(decimals = Math.abs(decimals))) {
        decimals = 2;
    }
    if (dec_point == undefined) {
        dec_point = ",";
    }
    if (thousands_sep == undefined) {
        thousands_sep = ".";
    }
    i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
    if ((j = i.length) > 3) {
        j = j % 3;
    } else {
        j = 0;
    }
    km = (j ? i.substr(0, j) + thousands_sep : "");
    kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
    kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
    return km + kw + kd;
}

function imageResize(src) {
    $('img').not('.logo__img').attr('src', src);
}
// imageResize('https://loremflickr.com/320/440');

const wWidth = $(window).width();

// $.validator.methods.tel = function (value, element) {
//     let re = new RegExp(/\d/g),
//         str = value.match(re);
//
//     if (str.length == 11) {
//         return true;
//     } else {
//         return false;
//     }
// };

$('input[type=tel]').mask('+7 (999) 999-99-99');
//index.js
$(function () {

    const ibanner = document.querySelector('.ibanner__slider');
    if (ibanner) {
        let ibannerSlider = new Swiper('.ibanner__container', {
            slidesPerView: 1,
            effect: 'slide',
            loop: true,
            watchOverflow: true,
            // Navigation arrows
            navigation: {
                nextEl: '.ibanner__next-btn',
                prevEl: '.ibanner__prev-btn',
            },
            // If we need pagination
            pagination: {
                el: '.ibanner__pag',
                clickable: true
            },

            on: {
                init: function () {
                    initParams(this,ibanner);
                },
            },
        });
    }

    const iprojects = document.querySelector('.iprojects__slider');
    if (iprojects) {
        let iprojectsSlider = new Swiper('.iprojects__container', {
            slidesPerView: 'auto',
            effect: 'slide',
            spaceBetween: 20,
            loop: true,
            // If we need pagination
            pagination: {
                el: '.iprojects__pag .pag',
                clickable: true
            },
            on: {
                init: function () {
                    initParams(this,iprojects);
                },

            }
        });
    }

    const irecom = $('.irecom__slider');
    if (irecom.length>0) {
        let irecomSliders = {};

        irecom.each(function (x, i) {
            let slider = i;

            irecomSliders['iprojectsSlider' + x] = new Swiper('.irecom__container-'+x, {
                slidesPerView: 4,
                effect: 'slide',
                spaceBetween: 20,
                loop: true,
                watchOverflow: true,
                // Navigation arrows
                navigation: {
                    nextEl: '.irecom__next-'+x,
                    prevEl: '.irecom__prev-'+x,
                },
                // If we need pagination
                pagination: {
                    el: '.irecom__pag-'+x+' .pag',
                    clickable: true
                },
                on: {
                    init: function () {
                        initParams(this,slider);
                    },
                }
            });

        });


    }

    const iactions = document.querySelector('.iactions__slider');
    if (iprojects) {
        let iprojectsSlider = new Swiper('.iactions__container', {
            slidesPerView: 4,
            effect: 'slide',
            spaceBetween: 20,
            loop: true,
            watchOverflow: true,
            // If we need pagination
            pagination: {
                el: '.iactions__pag .pag',
                clickable: true
            },
            // Navigation arrows
            navigation: {
                nextEl: '.iactions__next',
                prevEl: '.iactions__prev',
            },
            on: {
                init: function () {
                    initParams(this,iprojects);
                },
            }
        });
    }

    const irevs = document.querySelector('.irevs__slider');
    if (iprojects) {
        let iprojectsSlider = new Swiper('.irevs__container', {
            slidesPerView: 3,
            effect: 'slide',
            spaceBetween: 20,
            loop: true,
            watchOverflow: true,
            // If we need pagination
            pagination: {
                el: '.irevs__pag .pag',
                clickable: true
            },
            // Navigation arrows
            navigation: {
                nextEl: '.irevs__next',
                prevEl: '.irevs__prev',
            },
            on: {
                init: function () {
                    initParams(this,irevs);
                },
            }
        });
    }

    const ibrands = document.querySelector('.ibrands__slider');
    if (iprojects) {
        let iprojectsSlider = new Swiper('.ibrands__container', {
            slidesPerView: 5,
            effect: 'slide',
            spaceBetween: 20,
            loop: true,
            watchOverflow: true,
            // If we need pagination
            pagination: {
                el: '.ibrands__pag .pag',
                clickable: true
            },
            // Navigation arrows
            navigation: {
                nextEl: '.ibrands__next',
                prevEl: '.ibrands__prev',
            },
            on: {
                init: function () {
                    initParams(this,ibrands);
                },
            }
        });
    }



    function initParams(item,slider) {

        let params = item.params,
            data = slider.dataset,
            speed = parseInt(data.speed) || 300,
            autoplay = (data.autoplay == 'true'),
            delay = parseInt(data.autoplayDelay) || 5000,
            pagination = (data.pagination == 'true');

        params.speed = speed;

        if (autoplay) {
            params.autoplay.enabled = autoplay;
            params.autoplay.delay = delay;
        }


        if (!pagination) {
            params.pagination = {};
        }
    }

});

//# sourceMappingURL=main.min.js.map