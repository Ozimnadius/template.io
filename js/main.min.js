//@prepros-append pages/device.min.js
//@prepros-append pages/common.js
//@prepros-append pages/header.js
//@prepros-append pages/index.js
//@prepros-append pages/popup.js
//@prepros-append pages/mmenu.js
//@prepros-append pages/footer.js
/*! device.js 0.1.57 */
(function(){var a,b,c,d,e,f,g,h,i;window.device={},b=window.document.documentElement,i=window.navigator.userAgent.toLowerCase(),device.ios=function(){return device.iphone()||device.ipod()||device.ipad()},device.iphone=function(){return c("iphone")},device.ipod=function(){return c("ipod")},device.ipad=function(){return c("ipad")},device.android=function(){return c("android")},device.androidPhone=function(){return device.android()&&c("mobile")},device.androidTablet=function(){return device.android()&&!c("mobile")},device.blackberry=function(){return c("blackberry")||c("bb10")||c("rim")},device.blackberryPhone=function(){return device.blackberry()&&!c("tablet")},device.blackberryTablet=function(){return device.blackberry()&&c("tablet")},device.windows=function(){return c("windows")},device.windowsPhone=function(){return device.windows()&&c("phone")},device.windowsTablet=function(){return device.windows()&&c("touch")},device.fxos=function(){return c("(mobile; rv:")||c("(tablet; rv:")},device.fxosPhone=function(){return device.fxos()&&c("mobile")},device.fxosTablet=function(){return device.fxos()&&c("tablet")},device.mobile=function(){return device.androidPhone()||device.iphone()||device.ipod()||device.windowsPhone()||device.blackberryPhone()||device.fxosPhone()},device.tablet=function(){return device.ipad()||device.androidTablet()||device.blackberryTablet()||device.windowsTablet()||device.fxosTablet()},device.portrait=function(){return 90!==Math.abs(window.orientation)},device.landscape=function(){return 90===Math.abs(window.orientation)},c=function(a){return-1!==i.indexOf(a)},e=function(a){var c;return c=new RegExp(a,"i"),b.className.match(c)},a=function(a){return e(a)?void 0:b.className+=" "+a},g=function(a){return e(a)?b.className=b.className.replace(a,""):void 0},device.ios()?device.ipad()?a("ios ipad tablet"):device.iphone()?a("ios iphone mobile"):device.ipod()&&a("ios ipod mobile"):device.android()?device.androidTablet()?a("android tablet"):a("android mobile"):device.blackberry()?device.blackberryTablet()?a("blackberry tablet"):a("blackberry mobile"):device.windows()?device.windowsTablet()?a("windows tablet"):device.windowsPhone()?a("windows mobile"):a("desktop"):device.fxos()?device.fxosTablet()?a("fxos tablet"):a("fxos mobile"):a("desktop"),d=function(){return device.landscape()?(g("portrait"),a("landscape")):(g("landscape"),a("portrait"))},h="onorientationchange"in window,f=h?"orientationchange":"resize",window.addEventListener?window.addEventListener(f,d,!1):window.attachEvent?window.attachEvent(f,d):window[f]=d,d()}).call(this);
// common.js
function getNumber(str) {
    return parseInt(str.replace(/\s/g, ''));
}

function number_format(number, decimals, dec_point, thousands_sep) {
    var i, j, kw, kd, km;
    if (isNaN(decimals = Math.abs(decimals))) {
        decimals = 2;
    }
    if (dec_point == undefined) {
        dec_point = ",";
    }
    if (thousands_sep == undefined) {
        thousands_sep = ".";
    }
    i = parseInt(number = (+number || 0).toFixed(decimals)) + "";
    if ((j = i.length) > 3) {
        j = j % 3;
    } else {
        j = 0;
    }
    km = (j ? i.substr(0, j) + thousands_sep : "");
    kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
    kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");
    return km + kw + kd;
}

function imageResize(src) {
    $('img').not('.logo__img').attr('src', src);
}

// imageResize('https://loremflickr.com/320/440');

const wWidth = $(window).width();

$.validator.methods.tel = function (value, element) {
    return validateTel(value);
};

function validateTel(value) {
    let re = new RegExp(/\d/g),
        str = value.match(re);

    if (str.length == 11) {
        return true;
    } else {
        return false;
    }
}

function initParams(item, slider) {

    let params = item.params,
        data = slider.dataset,
        speed = parseInt(data.speed) || 300,
        autoplay = (data.autoplay == 'true'),
        delay = parseInt(data.autoplayDelay) || 5000,
        pagination = (data.pagination == 'true');

    params.speed = speed;

    if (autoplay) {
        params.autoplay.enabled = autoplay;
        params.autoplay.delay = delay;
    }


    if (!pagination) {
        params.pagination = {};
    }
}

function AdaptiveMenu(menu) {
    this.menu = menu;
    this.items = this.menu.find('.menu__item');
    this.list = this.menu.find('.menu__list');
    this.more = this.menu.find('.menu__more');
    this.menuWidth = parseInt(this.menu.outerWidth());
    this.listWidth = parseInt(this.list.outerWidth());
    this.moreWidth = parseInt(this.more.outerWidth());
    this.moreList = this.more.find('.mmore__list');
    this.width = this.listWidth + this.moreWidth;
    this.cutItems = [];
    this.lastItem = this.cutItems[this.cutItems.length - 1];

    let that = this;

    $(window).resize(function () {
        that.update();
        that.compareWidth();
    });

    this.init = function () {
        that.compareWidth();
    };

    this.compareWidth = function () {

        if (that.menu.hasClass('cut')) {
            that.compareCutted();
        } else {
            that.compareNonCutted();
        }

    };

    this.compareNonCutted = function () {
        if (that.listWidth > that.menuWidth) {
            that.menu.addClass('cut');
            that.removeLastItem();
            that.update();
            that.addItemToMore();
            that.compareCutted();
        }
    };

    this.compareCutted = function () {
        that.list.addClass('nogrow');

        if (that.width > that.menuWidth) {
            while (that.width > that.menuWidth) {
                that.removeLastItem();
                that.update();
                that.addItemToMore();
            }
        } else {
            while (that.lastItem.width + that.listWidth <= that.menuWidth) {
                that.addLastItem();
                that.removeItemFromMore();
                that.update();
                if (!that.lastItem) {
                    that.menu.removeClass('cut');
                    break;
                }
            }
        }

        that.list.removeClass('nogrow');
    };

    this.removeLastItem = function () {
        let item = $(that.items[that.items.length - 1]),
            link = item.find('.menu__link');

        that.cutItems.push({
            width: parseInt(item.outerWidth()),
            item: item,
            href: link.attr('href'),
            title: link.text()
        });
        item.detach();
    };

    this.addLastItem = function () {
        let item = that.lastItem.item;
        that.list.append(item);
        that.cutItems.pop();
    };

    this.addItemToMore = function () {
        let item = that.lastItem,
            link = $('<a>').addClass('mmore__item').attr('href',item.href).text(item.title);

        that.moreList.append(link);
    };

    this.removeItemFromMore = function () {
        let item = that.lastItem;
        that.moreList.find('a[href="'+item.href+'"]').remove();
    };

    this.update = function () {
        that.list.addClass('nogrow');
        that.items = that.menu.find('.menu__item');
        // that.list = that.menu.find('.menu__list');
        // that.more = that.menu.find('.menu__more');
        // that.moreList = that.more.find('.mmore__list');
        that.menuWidth = parseInt(that.menu.outerWidth());
        that.listWidth = parseInt(that.list.outerWidth());
        that.moreWidth = parseInt(that.more.outerWidth());
        that.width = that.listWidth + that.moreWidth;
        that.lastItem = that.cutItems[that.cutItems.length - 1];
        that.list.removeClass('nogrow');
    }

}

function setOverflow() {
    $('body').addClass('overflow');
}

function removeOverflow() {
    $('body').removeClass('overflow');
}

$(function () {

    $('.tabset__select-select').on('change', function (e) {
        e.preventDefault();
        console.log(this.value);
        let select = $(this),
            val = select.val(),
            tabset = select.closest('.tabset'),
            inputs = tabset.find('.tabset__input'),
            input = inputs.filter('[id = '+val+']');
        inputs.attr('checked',false);
        input.attr('checked',true);
        input.trigger('change');
    });

    $('.scroll__btn').on('click', function (e) {
        e.preventDefault();

        $('html, body').animate({scrollTop: 0}, 400);
    });


});





//header.js
$(function () {


    let $menus = $('.menu'),
        menusObj = {};

    $menus.each(function (x, i) {
        let menu = $(i);
        menusObj['menu' + x] = new AdaptiveMenu(menu);
        menusObj['menu' + x].init();
    });

    const headerFixed = $('.fixmenu'),
        headerMain = $('.header');

    $(window).on('scroll', function (e) {
        let height = headerMain.outerHeight(),
            scrollTop = $(this).scrollTop();

        if (scrollTop > height) {
            headerFixed.addClass('active');
        } else {
            headerFixed.removeClass('active');
        }

    });


    if (device.tablet() || device.mobile()) {
        $('.jsHoverLink').on('click', function (e) {
            e.preventDefault();
            let link = $(this),
                item = link.closest('.jsHoverItem');

            $(this).trigger('hover');
        });
    }

});
//index.js
$(function () {

    const ibanner = document.querySelector('.ibanner__slider');
    if (ibanner) {
        let ibannerSlider = new Swiper('.ibanner__container', {
            slidesPerView: 1,
            effect: 'slide',
            loop: true,
            watchOverflow: true,
            // Navigation arrows
            navigation: {
                nextEl: '.ibanner__next-btn',
                prevEl: '.ibanner__prev-btn',
            },
            // If we need pagination
            pagination: {
                el: '.ibanner__pag',
                clickable: true
            },

            on: {
                init: function () {
                    initParams(this, ibanner);
                },
            },
        });
    }

    const iprojects = document.querySelector('.iprojects__slider');
    if (iprojects) {
        let iprojectsSlider = new Swiper('.iprojects__container', {
            slidesPerView: 'auto',
            effect: 'slide',
            spaceBetween: 20,
            loop: true,
            // If we need pagination
            pagination: {
                el: '.iprojects__pag .pag',
                clickable: true
            },
            breakpoints: {
                // when window width is <= 768px
                768: {
                    slidesPerView: 1,
                    spaceBetween: 0
                },
            },
            on: {
                init: function () {
                    initParams(this, iprojects);
                },

            }
        });
    }

    const irecom = $('.irecom__slider');
    if (irecom.length > 0) {
        let irecomSliders = {};

        irecom.each(function (x, i) {
            let slider = i;

            irecomSliders['iprojectsSlider' + x] = new Swiper('.irecom__container-' + x, {
                slidesPerView: 4,
                effect: 'slide',
                spaceBetween: 20,
                loop: true,
                watchOverflow: true,
                // Navigation arrows
                navigation: {
                    nextEl: '.irecom__next-' + x,
                    prevEl: '.irecom__prev-' + x,
                },
                // If we need pagination
                pagination: {
                    el: '.irecom__pag-' + x + ' .pag',
                    clickable: true
                },
                breakpoints: {
                    // when window width is <= 768px
                    768: {
                        slidesPerView: 2,
                        spaceBetween: -1,
                    },
                    // when window width is <= 1200px
                    1200: {
                        slidesPerView: 3,
                    },
                },
                on: {
                    init: function () {
                        initParams(this, slider);
                    },
                }
            });

        });


    }

    const iactions = document.querySelector('.iactions__slider');
    if (iactions) {
        let iprojectsSlider = new Swiper('.iactions__container', {
            slidesPerView: 4,
            effect: 'slide',
            spaceBetween: 20,
            loop: true,
            watchOverflow: true,
            // If we need pagination
            pagination: {
                el: '.iactions__pag .pag',
                clickable: true
            },
            // Navigation arrows
            navigation: {
                nextEl: '.iactions__next',
                prevEl: '.iactions__prev',
            },
            breakpoints: {
                // when window width is <= 768px
                768: {
                    spaceBetween: 10,
                    slidesPerView: 1,
                },
                // when window width is <= 800px
                850: {
                    spaceBetween: 70,
                    slidesPerView: 2,
                },
                // when window width is <= 1200px
                1200: {
                    slidesPerView: 3,
                },
            },
            on: {
                init: function () {
                    initParams(this, iprojects);
                },
            }
        });
    }

    const irevs = document.querySelector('.irevs__slider');
    if (irevs) {
        let iprojectsSlider = new Swiper('.irevs__container', {
            slidesPerView: 3,
            effect: 'slide',
            spaceBetween: 20,
            loop: true,
            watchOverflow: true,
            // If we need pagination
            pagination: {
                el: '.irevs__pag .pag',
                clickable: true
            },
            // Navigation arrows
            navigation: {
                nextEl: '.irevs__next',
                prevEl: '.irevs__prev',
            },
            breakpoints: {
                // when window width is <= 769px
                769: {
                    slidesPerView: 1,
                    spaceBetween: 10,
                },
                // when window width is <= 850px
                850: {
                    slidesPerView: 2,
                },
            },
            on: {
                init: function () {
                    initParams(this, irevs);
                },
            }
        });
    }

    const ibrands = document.querySelector('.ibrands__slider');
    if (ibrands) {
        let iprojectsSlider = new Swiper('.ibrands__container', {
            slidesPerView: 5,
            effect: 'slide',
            spaceBetween: 20,
            loop: true,
            watchOverflow: true,
            // If we need pagination
            pagination: {
                el: '.ibrands__pag .pag',
                clickable: true
            },
            // Navigation arrows
            navigation: {
                nextEl: '.ibrands__next',
                prevEl: '.ibrands__prev',
            },
            breakpoints: {
                // when window width is <= 768px
                768: {
                    slidesPerView: 2,
                    spaceBetween: 10,
                },
                // when window width is <= 850px
                850: {
                    slidesPerView: 3,
                },
                // when window width is <= 1200px
                1200: {
                    slidesPerView: 4,
                },
            },
            on: {
                init: function () {
                    initParams(this, ibrands);
                },
            }
        });
    }

    $('input[type=tel]').mask('+7 (999) 999-99-99');

    $('.ffeed').validate({
        onfocusout: false,
        submitHandler: function (form) {
            alert('submit');
        },
        invalidHandler: function (event, validator) {
            // debugger;
        },
        errorPlacement: function (error, element) {
            element[0].placeholder = error[0].innerText;
            // debugger;
        }
    });

});
//popup.js
$(function () {
    // VARIABLES
    const popup = $('.popup'),
        btns = popup.find('.popup__btn'),
        tab = popup.find('.popup__tab');

    // EVENTS
    //Анимация плейсхолдера input формы
    $('body').on('focusin', '.popup__input', function (e) {
        let placeholder = getPlaceholder(this);
        placeholder.addClass('active');
    });
    $('body').on('focusout', '.popup__input', function (e) {
        let $this = $(this),
            type = $this.attr('type'),
            value = $this.val(),
            placeholder = getPlaceholder(this);

        if (type == 'tel') {
            if (!validateTel(value)) {
                $this.val('');
                placeholder.removeClass('active');
            }
        } else {
            if (!this.value) {
                placeholder.removeClass('active');
            }
        }
    });


    //Вызов формы "Заказать звонок"
    $('.jsCall').on('click', function (e) {
        e.preventDefault();

        let btn = btns.filter('[data-action=callback]'),
            action = btn.data('action'),
            url = btn.data('ajax'),
            data = {
                action: action
            };

        if (btn.hasClass('active')) {
            deactivatePopup();
            return;
        }

        activatePopup(btn, 'loader_white');

        sendAjax(url, data);

    });

    //Вызов формы "Задать вопрос"
    $('.jsQuestion').on('click', function (e) {
        e.preventDefault();

        let btn = btns.filter('[data-action=question]'),
            action = btn.data('action'),
            url = btn.data('ajax'),
            data = {
                action: action
            };

        if (btn.hasClass('active')) {
            deactivatePopup();
            return;
        }

        activatePopup(btn, 'loader_white');

        sendAjax(url, data);

    });

    //Вызов формы "Оставить отзыв"
    $('.jsReview').on('click', function (e) {
        e.preventDefault();

        let btn = btns.filter('[data-action=review]'),
            action = btn.data('action'),
            url = btn.data('ajax'),
            data = {
                action: action
            };

        if (btn.hasClass('active')) {
            deactivatePopup();
            return;
        }

        activatePopup(btn, 'loader_white');

        $.ajax({
            dataType: "json",
            type: "POST",
            url: url,
            data: data,
            success: function (result) {
                if (result.status) {
                    tab.html(result.html);
                    deactivateLoader();

                    let form = tab.find('.popup__form');
                    $('input[type=tel]').mask('+7 (999) 999-99-99');

                    form.validate({
                        onfocusout: false,
                        submitHandler: function (form) {
                            activateLoader('loader_white');
                            let $form = $(form),
                                data =new FormData(),
                                url = $form.attr('action'),
                                file = form.querySelector('.file__input'),
                                inputs = $form.find('input[type!=file],textarea');


                            if (file.files.length>0) {
                                data.append('file', file.files[0]);
                            }
                            inputs.each(function (x,i) {
                                data.append(i.name, i.value);
                            });

                            $.ajax({
                                dataType: "json",
                                type: "POST",
                                url: url,
                                data: data,
                                cache: false,
                                contentType: false,
                                processData: false,
                                success: function (result) {
                                    if (result.status) {
                                        tab.html(result.html);
                                        deactivateLoader();
                                    } else {
                                        alert('Что-то пошло не так, попробуйте еще раз!!!');
                                    }
                                },
                                error: function (result) {
                                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                                }
                            });
                        },
                    });

                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });

    });


    //Изменение выбора файла
    $('.popup').on('change', '.file__input', function (e) {
        let input = $(this),
            val = input.val(),
            item = input.closest('.file'),
            text = item.find('.file__title'),
            file = val.replace(/\\/g, '/').split('/').pop();

        if (val) {
            text.text(file);
            item.addClass('active');
        } else {
            text.text('Прикрепить');
            item.removeClass('active');
        }

    });

    //Удаление файла
    $('.popup').on('click', '.file__del', function (e) {
        e.preventDefault();
        let btn = $(this),
            item = btn.closest('.file'),
            text = item.find('.file__title'),
            input = item.find('.file__input');

        input.val('');
        text.text('Прикрепить');
        item.removeClass('active');
    });

    $('.popup').on('mouseover', '.rating2__star', function () {
        let star = $(this),
            rate = star.data('rate');

        setRatingText(rate);
    });

    $('.popup').on('mouseout', '.rating2__star', function () {
        let checked = $('.rating2__input:checked');
        if (checked.length == 0) {
            setRatingText('Без оценки');
        } else {
            setRatingText(checked.val());
        }
    });

    //Закрытие форм
    $('body').on('click', function (e) {
        let target = $(e.target);

        if (target.hasClass('popup active') || target.closest('.jsFormClose').length > 0) {
            deactivatePopup();
        }
    });


    // FUNCTIONS
    function getPlaceholder(i) {
        let input = $(i),
            field = input.closest('.popup__field'),
            placeholder = field.find('.popup__placeholder');

        return placeholder;
    }

    function activatePopup(btn, loaderClass) {
        popup.addClass('active');
        setOverflow();
        btns.removeClass('active');
        btn.addClass('active');
        activateLoader(loaderClass);
        tab.html('');
    }

    function deactivatePopup() {
        popup.removeClass('active');
        removeOverflow();
        btns.removeClass('active');
        tab.html('');
    }

    function activateLoader(loaderClass = 'loader_default') {
        popup.find('.popup__tabs').append(getLoader(loaderClass));
    }

    function deactivateLoader() {
        popup.find('.loader').remove();
    }

    function getLoader(cls) {
        let template = $(tmpl.content),
            loader = template.find('.loader').clone().addClass(cls);
        return loader;
    }

    function sendAjax(url, data) {
        $.ajax({
            dataType: "json",
            type: "POST",
            url: url,
            data: data,
            success: function (result) {
                if (result.status) {
                    tab.html(result.html);
                    deactivateLoader();

                    let form = tab.find('.popup__form');
                    $('input[type=tel]').mask('+7 (999) 999-99-99');

                    validateForm(form, tab)

                } else {
                    alert('Что-то пошло не так, попробуйте еще раз!!!');
                }
            },
            error: function (result) {
                alert('Что-то пошло не так, попробуйте еще раз!!!');
            }
        });
    }

    function validateForm(form, tab) {
        form.validate({
            onfocusout: false,
            submitHandler: function (form) {
                activateLoader('loader_white');
                let $form = $(form),
                    data = $form.serialize(),
                    url = $form.attr('action');

                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: url,
                    data: data,
                    success: function (result) {
                        if (result.status) {
                            tab.html(result.html);
                            deactivateLoader();
                        } else {
                            alert('Что-то пошло не так, попробуйте еще раз!!!');
                        }
                    },
                    error: function (result) {
                        alert('Что-то пошло не так, попробуйте еще раз!!!');
                    }
                });
            },
        });
    }

    function setRatingText(val) {
        $('.rating2__txt').text(val);
    }


    //VENDORS


});
//mmenu.js
$(function () {
    $('.mitem__link_arr').on('click', function (e) {
        e.preventDefault();
        let link = $(this),
            wrapper = link.next();

        wrapper.addClass('active');
    });

    $('.jsWrapClose').on('click', function (e) {
        e.preventDefault();
        let btn = $(this),
            wrapper = btn.closest('.mmenu__wrapper');

        wrapper.removeClass('active');
    });

    $('.jsMenuOpen').on('click',function (e) {
        e.preventDefault();
        openMenu();
        setOverflow();
    });

    $('.jsMenuClose').on('click',function (e) {
        e.preventDefault();
        closeMenu();
        removeOverflow();
    });

    function openMenu() {
        let menu = $('.mmenu');
        menu.addClass('active');
    }

    function closeMenu() {
        let menu = $('.mmenu'),
            wrappers = menu.find('.mmenu__wrapper');
        menu.removeClass('active');
        wrappers.removeClass('active');

    }
});
//footer.js
$(function () {

});

//# sourceMappingURL=main.min.js.map